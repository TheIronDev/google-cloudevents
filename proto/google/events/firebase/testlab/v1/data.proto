// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.firebase.testlab.v1;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Events.Protobuf.Firebase.TestLab.V1";
option java_package = "com.google.events.firebase.testlab.v1";
option java_outer_classname = "DataProto";
option java_multiple_files = true;

// The data within all Firebase Test Matrix events.
message TestMatrixEventData {
  // ID of the test matrix that this event data belongs to.
  string test_matrix_id = 1;

  // Time the test matrix was created.
  google.protobuf.Timestamp timestamp = 9;

  // State of the test matrix.
  TestState state = 8;

  // Outcome summary of the test matrix.
  OutcomeSummary outcome_summary = 14;

  // Code that describes why the test matrix is considered invalid. Only set for
  // matrices in the INVALID state.
  string invalid_matrix_details = 11;

  // Locations where test results are stored.
  ResultStorage result_storage = 6;

  // Information provided by the client that created the test matrix.
  ClientInfo client_info = 10;
}

// Locations where test results are stored.
message ResultStorage {
  // Location in Google Cloud Storage where test results are written to.
  GoogleCloudStorage google_cloud_storage = 1;

  // Tool Results history that contains the Tool Results execution.
  ToolResultsHistory tool_results_history = 5;

  // Tool Results execution that test results are written to.
  ToolResultsExecution tool_results_execution = 6;

  // URL to the test results in the Firebase Web Console.
  string results_url = 7;
}

// Storage location within Google Cloud Storage.
message GoogleCloudStorage {
  // Bucket and optional object path, in the form
  // "gs://bucket/path/to/somewhere".
  string gcs_path = 1;
}

// Represents a Tool Results history resource.
message ToolResultsHistory {
  // Google Cloud project that owns the Tool Results history.
  string project_id = 1;

  // Tool Results history ID.
  string history_id = 2;
}

// Represents a Tool Results execution resource.
message ToolResultsExecution {
  // Google Cloud project that owns the Tool Results execution.
  string project_id = 1;

  // Tool Results history ID.
  string history_id = 2;

  // Tool Results execution ID.
  string execution_id = 3;
}

// Information about the client which invoked the test.
message ClientInfo {
  // Client name, such as "gcloud".
  string name = 1;

  // List of detailed information about the client.
  repeated ClientInfoDetail client_info_details = 2;
}

// Key-value pair of detailed client information.
message ClientInfoDetail {
  // Key of detailed client information.
  string key = 1;
  // Value of detailed client information.
  string value = 2;
}

// Possible test states for a test matrix.
enum TestState {
  // The default value. This value is used if the state is omitted.
  TEST_STATE_UNSPECIFIED = 0;

  // The test matrix is being validated.
  VALIDATING = 8;

  // The test matrix is waiting for resources to become available.
  PENDING = 1;

  // The test matrix has completed normally.
  FINISHED = 3;

  // The test matrix has completed because of an infrastructure failure.
  ERROR = 4;

  // The test matrix was not run because the provided inputs are not valid.
  INVALID = 7;
}

// Outcome summary for a finished test matrix.
enum OutcomeSummary {
  // The default value. This value is used if the state is omitted.
  OUTCOME_SUMMARY_UNSPECIFIED = 0;

  // The test matrix run was successful, for instance:
  // - All test cases passed.
  // - No crash of the application under test was detected.
  SUCCESS = 1;

  // A run failed, for instance:
  // - One or more test case failed.
  // - A test timed out.
  // - The application under test crashed.
  FAILURE = 2;

  // Something unexpected happened. The test run should still be considered
  // unsuccessful but this is likely a transient problem and re-running the
  // test might be successful.
  INCONCLUSIVE = 3;

  // All tests were skipped.
  SKIPPED = 4;
}
